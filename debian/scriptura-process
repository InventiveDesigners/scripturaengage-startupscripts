#! /bin/sh
### BEGIN INIT INFO
# Provides:          scriptura-process
# Required-Start:    $syslog $time $network $local_fs $remote_fs
# Required-Stop:     $syslog $time $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Inventive Designers Scriptura 8 Process Server
# Description:       Inventive Designers Scriptura 8 Process Server
### END INIT INFO

SCRIPTURA_INSTALL=/opt/scriptura/install
PATH=/sbin:/usr/sbin:/bin:/usr/bin:$SCRIPTURA_INSTALL
DESC="Inventive Designers Scriptura 8 Process Server"
NAME=ScripturaStartProcessServer
STOPNAME=ScripturaStopProcessServer
DAEMON=$SCRIPTURA_INSTALL/startprocessserver/$NAME
STOPDAEMON=$SCRIPTURA_INSTALL/stopprocessserver/$STOPNAME
SCRIPTNAME=/etc/init.d/scriptura-process

# Exit if scriptura is not installed
[ -x "$DAEMON" ] || exit 0
[ -x "$STOPDAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	! nc -z localhost 13543 || return 1
	nohup su scriptura -c $DAEMON > /opt/scriptura/logs/console-processserver.log 2>&1 &
	while ! nc -z localhost 13543; do sleep 1; done
	while ! nc -z localhost 13547; do sleep 1; done
	while ! nc -z localhost 13542
	do
		a=$(($a+1))
		if [ "$a" -eq 60 ]
		then
			log_daemon_msg "Problem starting. Check log. There might be a missing license." "$NAME"
   			return 2;
		fi
		sleep 1;
	done
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	nc -z localhost 13543 || return 1
	su scriptura -c $STOPDAEMON > /dev/null 2>&1
	# Wait for children to finish too if this is a daemon that forks
	# and if the daemon is only ever run from this initscript.
	while nc -z localhost 13542; do sleep 1; done
	while nc -z localhost 13543; do sleep 1; done
	while nc -z localhost 13547; do sleep 1; done
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  restart|reload|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

: